# docker-compose.yml (in root APTIV folder)
version: '3.8'

services:
  # PostgreSQL Database (unchanged)
  postgres:
    image: postgres:15-alpine
    container_name: aptiv-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aptiv_internship
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - aptiv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aptiv_internship"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend (updated to pull from Docker Hub)
  backend:
    image: ouaail/aptiv-backend:latest  # Pull pre-built image instead of local build
    container_name: aptiv-backend
    restart: unless-stopped
    user: "0" 
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: aptiv_internship
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      
      # Spring configuration override for Docker - more permissive
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_HIBERNATE_HBM2DDL_AUTO: update
      # Let Flyway handle schema creation
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
      
      # JWT secret
      JWT_SECRET: VGhpcyBpcyBhIHNlY3VyZSBrZXkgZm9yIgRtMjU2IGFsZ29yaXRobQ==
      
      # Mail configuration (update with your settings)
      MAIL_HOST: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USERNAME: ouaailelaouad@gmail.com
      MAIL_PASSWORD: dcuj sbrx jyxw tien
      
      # File storage
      FILE_STORAGE_PATH: /app/files
      
      # HR email
      HR_EMAIL: elaouad.ouaail@etu.uae.ac.ma
      
    ports:
      - "8080:8080"
    volumes:
      - backend_files:/app/files
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aptiv-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Next.js Frontend (updated to pull from Docker Hub)
  frontend:
    image: ouaail/aptiv-frontend:latest  # Pull pre-built image instead of local build
    container_name: aptiv-frontend
    restart: unless-stopped
    environment:
      # API URL for backend communication (updated for container networking)
      NEXT_PUBLIC_API_URL: http://backend:8080/api
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - aptiv-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_files:
    driver: local

networks:
  aptiv-network:
    driver: bridge